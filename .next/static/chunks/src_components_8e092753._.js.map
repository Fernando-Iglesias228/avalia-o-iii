{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/fernando.iglesias/Desktop/%C3%9Atil/UFMS/Proj%20Integrador%20II/Avaliacao-iii/src/components/map.js"],"sourcesContent":["'use client';\r\nimport dynamic from 'next/dynamic';\r\n\r\nconst DynamicMap = dynamic(() => import('./mapLeaflet'), {\r\n  ssr: false,\r\n  loading: () => <p>Carregando mapa...</p>,\r\n});\r\n\r\nexport default function Mapa({ allMarkers = [] }) {\r\n  return <DynamicMap allMarkers={allMarkers} />;\r\n}"],"names":[],"mappings":";;;;AACA;;AADA;;;AAGA,MAAM,aAAa,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE;;;;;;IACzB,KAAK;IACL,SAAS,kBAAM,6LAAC;sBAAE;;;;;;;KAFd;AAKS,SAAS,KAAK,EAAE,aAAa,EAAE,EAAE;IAC9C,qBAAO,6LAAC;QAAW,YAAY;;;;;;AACjC;MAFwB","debugId":null}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/fernando.iglesias/Desktop/%C3%9Atil/UFMS/Proj%20Integrador%20II/Avaliacao-iii/src/components/submitFocos.js"],"sourcesContent":["'use client';\r\nimport { useEffect } from 'react';\r\nimport { OpenStreetMapProvider } from 'leaflet-geosearch';\r\n\r\nexport default function SubmitFocos() {\r\n  useEffect(() => {\r\n    const form = document.getElementById('form-cadastro-foco');\r\n    if (!form) return;\r\n\r\n    const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n      \r\n      const formData = new FormData(form);\r\n      const imageFile = formData.get('add-img');\r\n      \r\n      try {\r\n        let imageUrl = null;\r\n        if (imageFile && imageFile.size > 0) {\r\n          const uploadFormData = new FormData();\r\n          uploadFormData.append('file', imageFile);\r\n          \r\n          const uploadResponse = await fetch('/api/upload', {\r\n            method: 'POST',\r\n            body: uploadFormData,\r\n          });\r\n          \r\n          if (!uploadResponse.ok) {\r\n            throw new Error('Falha no upload da imagem');\r\n          }\r\n          \r\n          const uploadData = await uploadResponse.json();\r\n          imageUrl = uploadData.url;\r\n        }\r\n\r\n        const provider = new OpenStreetMapProvider();\r\n        const endereco = formData.get('addrs-foco');\r\n        const results = await provider.search({ query: endereco });\r\n        \r\n        if (results.length === 0) {\r\n          throw new Error('Endereço não encontrado');\r\n        }\r\n\r\n        const { x: lng, y: lat } = results[0];\r\n\r\n        const focoData = {\r\n          nome: formData.get('name'),\r\n          endereco,\r\n          tipo: formData.get('tipo-foco'),\r\n          imagem: imageUrl,\r\n          lat,\r\n          lng\r\n        };\r\n\r\n        const response = await fetch('/api/focos', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(focoData),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Erro ao registrar foco');\r\n        }\r\n\r\n        alert('Foco registrado com sucesso!');\r\n        form.reset();\r\n        window.location.reload();\r\n      } catch (error) {\r\n        console.error('Erro:', error);\r\n        alert('Erro: ' + error.message);\r\n      }\r\n    };\r\n\r\n    form.addEventListener('submit', handleSubmit);\r\n    return () => {\r\n      form.removeEventListener('submit', handleSubmit);\r\n    };\r\n  }, []);\r\n\r\n  return null;\r\n}"],"names":[],"mappings":";;;AACA;AACA;;AAFA;;;AAIe,SAAS;;IACtB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACR,MAAM,OAAO,SAAS,cAAc,CAAC;YACrC,IAAI,CAAC,MAAM;YAEX,MAAM;sDAAe,OAAO;oBAC1B,EAAE,cAAc;oBAEhB,MAAM,WAAW,IAAI,SAAS;oBAC9B,MAAM,YAAY,SAAS,GAAG,CAAC;oBAE/B,IAAI;wBACF,IAAI,WAAW;wBACf,IAAI,aAAa,UAAU,IAAI,GAAG,GAAG;4BACnC,MAAM,iBAAiB,IAAI;4BAC3B,eAAe,MAAM,CAAC,QAAQ;4BAE9B,MAAM,iBAAiB,MAAM,MAAM,eAAe;gCAChD,QAAQ;gCACR,MAAM;4BACR;4BAEA,IAAI,CAAC,eAAe,EAAE,EAAE;gCACtB,MAAM,IAAI,MAAM;4BAClB;4BAEA,MAAM,aAAa,MAAM,eAAe,IAAI;4BAC5C,WAAW,WAAW,GAAG;wBAC3B;wBAEA,MAAM,WAAW,IAAI,sKAAA,CAAA,wBAAqB;wBAC1C,MAAM,WAAW,SAAS,GAAG,CAAC;wBAC9B,MAAM,UAAU,MAAM,SAAS,MAAM,CAAC;4BAAE,OAAO;wBAAS;wBAExD,IAAI,QAAQ,MAAM,KAAK,GAAG;4BACxB,MAAM,IAAI,MAAM;wBAClB;wBAEA,MAAM,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,OAAO,CAAC,EAAE;wBAErC,MAAM,WAAW;4BACf,MAAM,SAAS,GAAG,CAAC;4BACnB;4BACA,MAAM,SAAS,GAAG,CAAC;4BACnB,QAAQ;4BACR;4BACA;wBACF;wBAEA,MAAM,WAAW,MAAM,MAAM,cAAc;4BACzC,QAAQ;4BACR,SAAS;gCAAE,gBAAgB;4BAAmB;4BAC9C,MAAM,KAAK,SAAS,CAAC;wBACvB;wBAEA,IAAI,CAAC,SAAS,EAAE,EAAE;4BAChB,MAAM,IAAI,MAAM;wBAClB;wBAEA,MAAM;wBACN,KAAK,KAAK;wBACV,OAAO,QAAQ,CAAC,MAAM;oBACxB,EAAE,OAAO,OAAO;wBACd,QAAQ,KAAK,CAAC,SAAS;wBACvB,MAAM,WAAW,MAAM,OAAO;oBAChC;gBACF;;YAEA,KAAK,gBAAgB,CAAC,UAAU;YAChC;yCAAO;oBACL,KAAK,mBAAmB,CAAC,UAAU;gBACrC;;QACF;gCAAG,EAAE;IAEL,OAAO;AACT;GA3EwB;KAAA","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/fernando.iglesias/Desktop/%C3%9Atil/UFMS/Proj%20Integrador%20II/Avaliacao-iii/src/components/enderecoAutoComplete.js"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport default function EnderecoAutoComplete() {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (query.length < 3) {\r\n      setSuggestions([]);\r\n      return;\r\n    }\r\n\r\n    const timeout = setTimeout(() => {\r\n      const bbox = \"-54.75,-20.6,-54.45,-20.3\";\r\n      const url = `https://photon.komoot.io/api/?q=${encodeURIComponent(query)}&limit=10&bbox=${bbox}`;\r\n\r\n      fetch(url)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          const rawSuggestions = data.features || [];\r\n\r\n          const uniqueMap = new Map();\r\n\r\n          rawSuggestions.forEach((sug) => {\r\n            const { name, street, city, country } = sug.properties;\r\n            const full = [name, street, city, country].filter(Boolean).join(\", \");\r\n            if (!uniqueMap.has(full)) {\r\n              uniqueMap.set(full, sug);\r\n            }\r\n          });\r\n\r\n          setSuggestions(Array.from(uniqueMap.values()));\r\n        })\r\n        .catch(err => {\r\n          console.error(\"Erro ao buscar sugestões:\", err);\r\n          setSuggestions([]);\r\n        });\r\n    }, 300);\r\n\r\n    return () => clearTimeout(timeout);\r\n  }, [query]);\r\n\r\n  const handleSelect = (suggestion) => {\r\n    const { name, street, city, country } = suggestion.properties;\r\n    const full = [name, street, city, country].filter(Boolean).join(\", \");\r\n    setQuery(full);\r\n    setSuggestions([]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"mb-3 position-relative\">\r\n      <label htmlFor=\"addrs-foco\" className=\"form-label\">Endereço do foco: *</label>\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control\"\r\n        id=\"addrs-foco\"\r\n        name=\"addrs-foco\"\r\n        required\r\n        autoComplete=\"off\"\r\n        value={query}\r\n        onChange={(e) => setQuery(e.target.value)}\r\n      />\r\n      {suggestions.length > 0 && (\r\n        <div className=\"list-group position-absolute w-100 z-3\" style={{ maxHeight: 200, overflowY: \"auto\" }}>\r\n          {suggestions.map((sug, i) => {\r\n            const { name, street, city, country } = sug.properties;\r\n            const full = [name, street, city, country].filter(Boolean).join(\", \");\r\n            return (\r\n              <button\r\n                key={i}\r\n                type=\"button\"\r\n                className=\"list-group-item list-group-item-action\"\r\n                onClick={() => handleSelect(sug)}\r\n              >\r\n                {full}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAEA;;;AAFA;;AAIe,SAAS;;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAEjD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0CAAE;YACR,IAAI,MAAM,MAAM,GAAG,GAAG;gBACpB,eAAe,EAAE;gBACjB;YACF;YAEA,MAAM,UAAU;0DAAW;oBACzB,MAAM,OAAO;oBACb,MAAM,MAAM,CAAC,gCAAgC,EAAE,mBAAmB,OAAO,eAAe,EAAE,MAAM;oBAEhG,MAAM,KACH,IAAI;kEAAC,CAAA,MAAO,IAAI,IAAI;iEACpB,IAAI;kEAAC,CAAA;4BACJ,MAAM,iBAAiB,KAAK,QAAQ,IAAI,EAAE;4BAE1C,MAAM,YAAY,IAAI;4BAEtB,eAAe,OAAO;0EAAC,CAAC;oCACtB,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,IAAI,UAAU;oCACtD,MAAM,OAAO;wCAAC;wCAAM;wCAAQ;wCAAM;qCAAQ,CAAC,MAAM,CAAC,SAAS,IAAI,CAAC;oCAChE,IAAI,CAAC,UAAU,GAAG,CAAC,OAAO;wCACxB,UAAU,GAAG,CAAC,MAAM;oCACtB;gCACF;;4BAEA,eAAe,MAAM,IAAI,CAAC,UAAU,MAAM;wBAC5C;iEACC,KAAK;kEAAC,CAAA;4BACL,QAAQ,KAAK,CAAC,6BAA6B;4BAC3C,eAAe,EAAE;wBACnB;;gBACJ;yDAAG;YAEH;kDAAO,IAAM,aAAa;;QAC5B;yCAAG;QAAC;KAAM;IAEV,MAAM,eAAe,CAAC;QACpB,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,WAAW,UAAU;QAC7D,MAAM,OAAO;YAAC;YAAM;YAAQ;YAAM;SAAQ,CAAC,MAAM,CAAC,SAAS,IAAI,CAAC;QAChE,SAAS;QACT,eAAe,EAAE;IACnB;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAM,SAAQ;gBAAa,WAAU;0BAAa;;;;;;0BACnD,6LAAC;gBACC,MAAK;gBACL,WAAU;gBACV,IAAG;gBACH,MAAK;gBACL,QAAQ;gBACR,cAAa;gBACb,OAAO;gBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;;;;;;YAEzC,YAAY,MAAM,GAAG,mBACpB,6LAAC;gBAAI,WAAU;gBAAyC,OAAO;oBAAE,WAAW;oBAAK,WAAW;gBAAO;0BAChG,YAAY,GAAG,CAAC,CAAC,KAAK;oBACrB,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,IAAI,UAAU;oBACtD,MAAM,OAAO;wBAAC;wBAAM;wBAAQ;wBAAM;qBAAQ,CAAC,MAAM,CAAC,SAAS,IAAI,CAAC;oBAChE,qBACE,6LAAC;wBAEC,MAAK;wBACL,WAAU;wBACV,SAAS,IAAM,aAAa;kCAE3B;uBALI;;;;;gBAQX;;;;;;;;;;;;AAKV;GAhFwB;KAAA","debugId":null}}]
}