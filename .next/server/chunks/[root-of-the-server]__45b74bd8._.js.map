{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/fernando.iglesias/Desktop/%C3%9Atil/UFMS/Proj%20Integrador%20II/Avaliacao-iii/src/lib/db.js"],"sourcesContent":["import Database from 'better-sqlite3';\r\nimport path from 'path';\r\nimport fs from 'fs';\r\n\r\nconst dbFile = path.join(process.cwd(), 'db.sqlite');\r\n\r\nfunction initializeDatabase() {\r\n  if (!fs.existsSync(dbFile)) {\r\n    const dbInit = new Database(dbFile);\r\n    try {\r\n      dbInit.exec(`\r\n        CREATE TABLE focos (\r\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\r\n          nome TEXT NOT NULL,\r\n          endereco TEXT NOT NULL,\r\n          tipo TEXT NOT NULL,\r\n          imagem TEXT,\r\n          lat REAL NOT NULL,\r\n          lng REAL NOT NULL,\r\n          data_registro TEXT DEFAULT CURRENT_TIMESTAMP\r\n        )\r\n      `);\r\n      console.log('Banco de dados inicializado com sucesso');\r\n    } catch (error) {\r\n      console.error('Erro ao inicializar banco de dados:', error);\r\n    } finally {\r\n      dbInit.close();\r\n    }\r\n  }\r\n}\r\n\r\ninitializeDatabase();\r\n\r\nconst db = new Database(dbFile, { verbose: console.log });\r\n\r\nexport function insertFoco(foco) {\r\n  try {\r\n    const stmt = db.prepare(`\r\n      INSERT INTO focos (nome, endereco, tipo, imagem, lat, lng)\r\n      VALUES (?, ?, ?, ?, ?, ?)\r\n    `);\r\n    const info = stmt.run(foco.nome, foco.endereco, foco.tipo, foco.imagem, foco.lat, foco.lng);\r\n    return { id: info.lastInsertRowid, ...foco };\r\n  } catch (error) {\r\n    console.error('Erro ao inserir foco:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport function getAllFocos() {\r\n  try {\r\n    const stmt = db.prepare(`SELECT * FROM focos ORDER BY data_registro DESC`);\r\n    return stmt.all();\r\n  } catch (error) {\r\n    console.error('Erro ao buscar focos:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport function deleteFoco(id) {\r\n  try {\r\n    const stmt = db.prepare(`DELETE FROM focos WHERE id = ?`);\r\n    const info = stmt.run(id);\r\n    return { changes: info.changes };\r\n  } catch (error) {\r\n    console.error('Erro ao deletar foco:', error);\r\n    throw error;\r\n  }\r\n}"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;AAEA,MAAM,SAAS,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;AAExC,SAAS;IACP,IAAI,CAAC,6FAAA,CAAA,UAAE,CAAC,UAAU,CAAC,SAAS;QAC1B,MAAM,SAAS,IAAI,2HAAA,CAAA,UAAQ,CAAC;QAC5B,IAAI;YACF,OAAO,IAAI,CAAC,CAAC;;;;;;;;;;;MAWb,CAAC;YACD,QAAQ,GAAG,CAAC;QACd,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,uCAAuC;QACvD,SAAU;YACR,OAAO,KAAK;QACd;IACF;AACF;AAEA;AAEA,MAAM,KAAK,IAAI,2HAAA,CAAA,UAAQ,CAAC,QAAQ;IAAE,SAAS,QAAQ,GAAG;AAAC;AAEhD,SAAS,WAAW,IAAI;IAC7B,IAAI;QACF,MAAM,OAAO,GAAG,OAAO,CAAC,CAAC;;;IAGzB,CAAC;QACD,MAAM,OAAO,KAAK,GAAG,CAAC,KAAK,IAAI,EAAE,KAAK,QAAQ,EAAE,KAAK,IAAI,EAAE,KAAK,MAAM,EAAE,KAAK,GAAG,EAAE,KAAK,GAAG;QAC1F,OAAO;YAAE,IAAI,KAAK,eAAe;YAAE,GAAG,IAAI;QAAC;IAC7C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,MAAM;IACR;AACF;AAEO,SAAS;IACd,IAAI;QACF,MAAM,OAAO,GAAG,OAAO,CAAC,CAAC,+CAA+C,CAAC;QACzE,OAAO,KAAK,GAAG;IACjB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,MAAM;IACR;AACF;AAEO,SAAS,WAAW,EAAE;IAC3B,IAAI;QACF,MAAM,OAAO,GAAG,OAAO,CAAC,CAAC,8BAA8B,CAAC;QACxD,MAAM,OAAO,KAAK,GAAG,CAAC;QACtB,OAAO;YAAE,SAAS,KAAK,OAAO;QAAC;IACjC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,MAAM;IACR;AACF","debugId":null}},
    {"offset": {"line": 167, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/fernando.iglesias/Desktop/%C3%9Atil/UFMS/Proj%20Integrador%20II/Avaliacao-iii/src/app/api/focos/%5Bid%5D/route.js"],"sourcesContent":["// app/api/focos/[id]/route.js\r\nimport { NextResponse } from \"next/server\";\r\nimport { deleteFoco } from \"@/lib/db\";\r\n\r\nexport async function DELETE(request, { params }) {\r\n  const { id } = params;\r\n\r\n  try {\r\n    const result = await deleteFoco(id);\r\n\r\n    if (result.changes === 0) {\r\n      return NextResponse.json({ error: \"Foco n√£o encontrado\" }, { status: 404 });\r\n    }\r\n\r\n    return NextResponse.json({ message: \"Foco deletado com sucesso\" });\r\n  } catch (error) {\r\n    return NextResponse.json({ error: \"Erro ao deletar foco\" }, { status: 500 });\r\n  }\r\n}"],"names":[],"mappings":"AAAA,8BAA8B;;;;AAC9B;AACA;;;AAEO,eAAe,OAAO,OAAO,EAAE,EAAE,MAAM,EAAE;IAC9C,MAAM,EAAE,EAAE,EAAE,GAAG;IAEf,IAAI;QACF,MAAM,SAAS,MAAM,CAAA,GAAA,kHAAA,CAAA,aAAU,AAAD,EAAE;QAEhC,IAAI,OAAO,OAAO,KAAK,GAAG;YACxB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAsB,GAAG;gBAAE,QAAQ;YAAI;QAC3E;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAA4B;IAClE,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAuB,GAAG;YAAE,QAAQ;QAAI;IAC5E;AACF","debugId":null}}]
}